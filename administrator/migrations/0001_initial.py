# Generated by Django 5.2.4 on 2025-08-23 11:17

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Countries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_name', models.CharField(max_length=20)),
                ('representation', models.CharField(max_length=20, null=True)),
                ('currency', models.CharField(max_length=10)),
                ('currency_symbol', models.CharField(max_length=5, null=True)),
                ('country_code', models.CharField(max_length=10, null=True)),
                ('time_zone', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CouponRedeemLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField(null=True)),
                ('coupon_id', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DiscountCoupons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coupon_code', models.CharField(max_length=60, null=True)),
                ('discount_percentage', models.IntegerField(null=True)),
                ('expiry_date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='InticureEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('net_profit', models.BigIntegerField(null=True)),
                ('net_expense', models.BigIntegerField(null=True)),
                ('net_income', models.BigIntegerField(null=True)),
                ('net_amount', models.BigIntegerField(null=True)),
                ('net_profit_usd', models.BigIntegerField(default=0)),
                ('net_expense_usd', models.BigIntegerField(default=0)),
                ('net_income_usd', models.BigIntegerField(default=0)),
                ('net_amount_usd', models.BigIntegerField(default=0)),
                ('currency', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='LanguagesKnown',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PaymentEntries',
            fields=[
                ('payment_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('doctor_share', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('inticure_share', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('doctor_base_rate', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('country_base_rate', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('inticure_share_from_min_percent', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('inticure_share_from_country_diff', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('inticure_min_percent', models.DecimalField(decimal_places=2, default=Decimal('10.00'), max_digits=5, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Payouts',
            fields=[
                ('payout_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('appointment_id', models.IntegerField(null=True)),
                ('payout_date', models.DateField(auto_now=True)),
                ('payout_time', models.TimeField(auto_now=True)),
                ('accepted_date', models.DateField(null=True)),
                ('accepted_time', models.TimeField(null=True)),
                ('doctor_id', models.IntegerField(null=True)),
                ('base_amount', models.IntegerField(null=True)),
                ('inticure_fee', models.IntegerField(null=True)),
                ('payout_status', models.IntegerField(default=0)),
                ('payout_amount', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReportCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appointment_id', models.IntegerField(null=True)),
                ('customer_id', models.IntegerField(null=True)),
                ('doctor_id', models.IntegerField(null=True)),
                ('report_remarks', models.TextField(null=True)),
                ('report_count', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Specializations',
            fields=[
                ('specialization_id', models.BigAutoField(primary_key=True, serialize=False)),
                ('specialization', models.CharField(max_length=50, null=True)),
                ('description', models.CharField(max_length=200, null=True)),
                ('single_session_duration', models.DurationField(blank=True, null=True)),
                ('double_session_duration', models.DurationField(blank=True, null=True)),
                ('is_prescription_allowed', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='TotalEarnings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctor_id', models.BigIntegerField()),
                ('accepted_date', models.DateField(null=True)),
                ('accepted_time', models.TimeField(null=True)),
                ('total_earnings', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TotalPayouts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payout_date', models.DateField(auto_now=True)),
                ('payout_time', models.TimeField(auto_now=True)),
                ('doctor_id', models.IntegerField(null=True)),
                ('total_payouts', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='GeneralPaymentRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pricing_name', models.CharField(blank=True, help_text="Name or label for this pricing rule (e.g. 'Basic 1-Session India', '3-Session Plan')", max_length=100, null=True)),
                ('experience', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=30, null=True)),
                ('doctor_flag', models.CharField(choices=[('junior', 'Junior'), ('senior', 'Senior')], max_length=30, null=True)),
                ('session_count', models.PositiveIntegerField(default=1, help_text='Number of sessions this rule applies to', null=True)),
                ('doctor_fee_single', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('user_total_fee_single', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('doctor_fee_couple', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('user_total_fee_couple', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('actual_price_single', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('actual_price_couple', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='general_payment_rules', to='administrator.countries')),
            ],
        ),
    ]
